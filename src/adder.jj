options {
	STATIC = false;
}

PARSER_BEGIN(Adder)
        
	public class Adder {
            private Integer valx;
            private Integer valy;
            private Integer valz;
            

            public Adder(Integer valx,Integer valy,Integer valz){
                this.valx=valx;
                this.valy=valy;
                this.valz=valz;
            }

           public Integer getValx(){
            return this.valx;
           }
           public Integer getValy(){
            return this.valy;
           }
            public Integer getValz(){
            return this.valz;
           }
        }

PARSER_END(Adder)

SKIP  : { " " | "\n" | "\r" | "\r\n" }
TOKEN : { < MAS : "+" > | < MENOS : "-" > | < MUL : "*" > | < DIV : "/" >}
TOKEN : { < LETRAX : "X" > | < LETRAY : "Y" > | < LETRAZ : "Z" >}
TOKEN : { < IGUAL : "=" > }
TOKEN : { < PUNTOCOMA : ";" > | < COMA : "," >}
TOKEN : { < NUMBER : (["0"-"9"])+ > }
TOKEN : { <IDENTIFIER: <LETTER>(<LETTER>|<NUMBER>)*> | <LETTER: (["a"-"z","A"-"Z"])>|<CADENA: ("\"")<IDENTIFIER>("\"")>}

int Start(): {int resultado;Adder letras;}{
    letras= Z() resultado = X(letras) {return resultado;}
}

Adder Z():{Token valx;Token valy;Token valz;}{
    <LETRAX> <IGUAL> valx=<NUMBER> <COMA>
    <LETRAY> <IGUAL> valy=<NUMBER> <COMA> 
    <LETRAZ> <IGUAL> valz=<NUMBER> <PUNTOCOMA> 
    {return new Adder(Integer.parseInt(valx.image),Integer.parseInt(valy.image),Integer.parseInt(valz.image));}
}

int X(Adder letras):{int res; int resultado;}{    
    res=T(letras) resultado= XP(letras, res) {return resultado;}
}

int XP(Adder letras, int numero):{int num; int resultado;}{
    <MAS> num= T(letras)  resultado= XP(letras, numero+num){return resultado;}
    |<MENOS> num= T(letras) resultado= XP(letras, numero+num){return resultado;}
    |{return numero;}
}

int T(Adder letras):{Integer numero; Integer resultado;}{
    numero=F(letras) resultado=TP(numero,letras)  {return resultado;}
}

int TP(Integer val,Adder letras):{Integer numero;Integer resultado;}{
 <MUL> numero=F(letras) resultado=TP(val*numero,letras)  {return resultado;}
    | <DIV> numero=F(letras) resultado=TP(val/numero,letras) {return resultado;}                       
    | {return val;}                                                    
}

int F(Adder letras):{Token numero;}{
    numero=<NUMBER> {return Integer.parseInt(numero.image);}
    |<LETRAX> {return letras.getValx();}
    |<LETRAY> {return letras.getValy();}
    |<LETRAZ> {return letras.getValz();}
}

